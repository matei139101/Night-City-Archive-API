//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "items")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub information: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::gear::Entity",
        from = "Column::Id",
        to = "super::gear::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Gear,
}

impl Related<super::gear::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Gear.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
